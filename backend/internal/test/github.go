package test

import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/bxcodec/faker/v3"
	"github.com/google/go-github/v39/github"
	"github.com/stretchr/testify/require"
)

type GithubClient struct {
	Client *github.Client
}

func (c GithubClient) GenerateTestRepository(tr *Runner) *github.Repository {
	nowUnix := time.Now().Unix()
	repoName := fmt.Sprintf("%s-%d", strings.ToLower(faker.Username()), nowUnix)

	repo, _, err := c.Client.Repositories.CreateFromTemplate(context.Background(), "the-foreman", "test-template", &github.TemplateRepoRequest{
		Name:        github.String(repoName),
		Private:     github.Bool(true),
		Description: github.String(repoName + " generated by e2e test runner"),
	})
	require.NoError(tr.T, err)

	tr.AddCleanupStep(func() error {
		_, err := c.Client.Repositories.Delete(context.Background(), repo.GetOwner().GetLogin(), repo.GetName())
		return err
	})

	return repo
}
