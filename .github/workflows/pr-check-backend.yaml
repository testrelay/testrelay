name: PR check backend
on:
  pull_request:
    paths:
      - "backend/*"

defaults:
  run:
    shell: bash
    working-directory: backend

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17.0'
      - name: build
        run: go build cmd/server/main.go
      - name: format
        run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi
      - name: test unit
        run: go test ./...
      - name: start docker-compose
        run: docker-compose -f "docker-compose-devtest.yaml" up -d --build
      - name: test integration
        run: go test ./... --tags=integration
      - name: test e2e
        env:
          E2E_FILE: ${{ secrets.E2E_FILE }}
          TEST_GITHUB_PRIVATE_KEY: ${{ secrets.TEST_GITHUB_PRIVATE_KEY }}
          TEST_GOOGLE_SERVICE_ACC: ${{ secrets.TEST_GOOGLE_SERVICE_ACC }}
        run: |
          timeout 60 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8080/healthz)" != "200" ]]; do sleep 5; done' || false
          mkdir -p cmd/server/test_assets
          echo "$E2E_FILE" > cmd/server/test_assets/e2e.env
          echo "$TEST_GITHUB_PRIVATE_KEY" > cmd/server/test_assets/github-private-key.e2e.pem
          echo "$TEST_GOOGLE_SERVICE_ACC" > cmd/server/test_assets/service-acc.e2e.json
          go test ./... --tags=e2e
      - name: stop containers
        if: ${{ always() }}
        run: |
          docker-compose -f "docker-compose-devtest.yaml" down

